plugins {
    id 'com.gladed.androidgitversion' version '0.4.5'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'
apply plugin: 'androidx.navigation.safeargs'

def keystorePropertiesFile = rootProject.file("keys/keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

androidGitVersion {
    codeFormat = 'MNNPPPBBB'
}

android {
    compileSdkVersion toolVersions.compileSdkVersion
    defaultConfig {
        applicationId "pl.jitsolutions.agile"
        minSdkVersion toolVersions.minSdkVersion
        targetSdkVersion toolVersions.targetSdkVersion
        versionName androidGitVersion.name()
        versionCode androidGitVersion.code()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        debug {
            ext.enableCrashlytics = false
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions 'version', 'backend'
    productFlavors {
        // Optimized for fast development cycle
        dev {
            dimension 'version'
            versionNameSuffix "-dev"
            applicationIdSuffix '.dev'
            resConfigs "en", "xxhdpi"
            versionName '1.0'
            versionCode 1
        }
        store {
            dimension 'version'
        }
        staging {
            dimension 'backend'
            versionNameSuffix "-staging"
        }
        production {
            dimension 'backend'
        }
    }

    variantFilter { variant ->
        def buildTypeName = variant.buildType*.name
        def flavorName = variant.flavors*.name
        if (flavorName.contains("dev") && buildTypeName.contains("release")) {
            setIgnore(true)
        }
        if (flavorName.contains("store") && buildTypeName.contains("debug")) {
            setIgnore(true)
        }
    }

    lintOptions {
        lintConfig file('lint.xml')
        abortOnError false //remove it!
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation "android.arch.navigation:navigation-fragment-ktx:$libVersions.navigationVersion"
    implementation "android.arch.navigation:navigation-ui-ktx:$libVersions.navigationVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$toolVersions.kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$libVersions.coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$libVersions.coroutinesVersion"

    implementation "androidx.room:room-runtime:$libVersions.roomVersion"
    kapt "androidx.room:room-compiler:$libVersions.roomVersion"

    implementation "androidx.lifecycle:lifecycle-extensions:$libVersions.lifecycleVersion"
    implementation "androidx.appcompat:appcompat:$libVersions.appCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$libVersions.constraintLayoutVersion"
    implementation "com.google.android.material:material:$libVersions.materialVersion"

    implementation "com.google.firebase:firebase-core:$libVersions.firebaseCoreVersion"
    implementation "com.google.firebase:firebase-auth:$libVersions.firebaseAuthVersion"
    implementation "com.google.firebase:firebase-firestore:$libVersions.firebaseFirestoreVersion"
    implementation "com.google.firebase:firebase-functions:$libVersions.firebaseFunctionsVersion"
    implementation "com.google.firebase:firebase-messaging:$libVersions.firebaseMessagingVersion"

    implementation "com.crashlytics.sdk.android:crashlytics:$libVersions.crashlyticsVersion"

    implementation "org.kodein.di:kodein-di-generic-jvm:$libVersions.kodeinVersion"
    implementation "org.kodein.di:kodein-di-framework-android-x:$libVersions.kodeinVersion"

    testImplementation "junit:junit:$libVersions.junitVersion"
    testImplementation "org.mockito:mockito-core:$libVersions.mockitoVersion"
    testImplementation "org.mockito:mockito-inline:$libVersions.mockitoVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$libVersions.mockitoKotlinVersion"
    testImplementation "androidx.arch.core:core-testing:$libVersions.lifecycleVersion"

    androidTestImplementation "androidx.test:runner:$libVersions.testRunnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$libVersions.espressoVersion"
    androidTestImplementation "android.arch.navigation:navigation-testing-ktx:$libVersions.navigationTestingVersion"
}
